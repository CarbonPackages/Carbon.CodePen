#
# Prototype that renders a the document around a preview-prototype
#
prototype(Carbon.CodePen:Preview.Page) < prototype(Neos.Fusion:Http.Message) {

    doctype = '<!DOCTYPE html>'
    doctype.@position = 'start 100'

    # Only the opening html tag for the page. This is done to avoid deep nesting of TypoScript paths for integrators.
    htmlTag = Neos.Fusion:Tag {
        @position = 'start'
        tagName = 'html'
        // attributes.style.color = "background: #fff;"
        omitClosingTag = TRUE
    }

    # The opening head tag for the page. This is done to avoid deep nesting of TypoScript paths for integrators.
    headTag = Neos.Fusion:Tag {
        @position = 'after htmlTag'
        tagName = 'head'
        omitClosingTag = TRUE
    }

    # The content of the head tag, integrators can add their own head content in this array.
    head = Neos.Fusion:Join {
        @position = 'after headTag'

        characterSetMetaTag = Neos.Fusion:Tag {
            @position = 'start 10'
            tagName = 'meta'
            attributes {
                charset = 'UTF-8'
            }
        }

        titleTag = Neos.Fusion:Tag {
            tagName = 'title'
        }

        # Link tags for stylesheets in the head should go here
        stylesheets = Neos.Fusion:Join

        # Script includes in the head should go here
        javascripts = Neos.Fusion:Join {
            @position = 'after stylesheets'
        }
    }

    closingHeadTag = '</head>'
    closingHeadTag.@position = 'after head'

    # The opening body tag for the page. This is done to avoid deep nesting of TypoScript paths for integrators.
    bodyTag = Neos.Fusion:Tag {
        @position = '20'
        tagName = 'body'
        omitClosingTag = TRUE
    }

    # Content of the body tag. To be defined by the integrator.
    body = Neos.Fusion:Join {
        @position = 'after bodyTag'

        nodeOutOfBand = Neos.Fusion:Case {
            codePenComponent {
                condition = Neos.Fusion:CanRender {
                    type = ${node.nodeType + '.CodePen'}
                }
                type = ${node.nodeType + '.CodePen'}
            }

            component {
                condition = true
                type = ${node.nodeType}
            }
        }
    }

    closingBodyTag = '</body>'
    closingBodyTag.@position = 'end 100'

    closingHtmlTag = '</html>'
    closingHtmlTag.@position = 'end 200'

    @exceptionHandler = 'Neos\\Neos\\Fusion\\ExceptionHandlers\\PageHandler'
}
