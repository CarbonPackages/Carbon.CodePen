Neos:
  Neos:
    Ui:
      frontendConfiguration:
        'Carbon.CodeEditor':

          #
          # Options for the tailwindcss support
          #
          tailwindcss:

            #
            # Enable Tailwind css support for the monaco editor.
            #
            # @var boolean
            #
            enabled: true

            #
            # Provide a custom tailwind configuartion for the editor.
            # You can decide to insert a Json string or a http URI to a Javascript bundle of your config.
            #
            # @example:
            #   - using Json:
            #     "${File.readFile('resource://Neos.Demo/Public/clientTailwindConfig.json')}"
            #   - using JavaScript:
            #     "${StaticResource.uri('Neos.Demo', 'Public/bundledTailwindConfig.js')}"
            #
            # @var string | null
            #
            clientConfig: null

          #
          # Options for the afx support
          #
          afx:

            #
            # Configure the fusion objects relevant for AFX
            # you can add a custom expand snippet ala vscode syntax
            # or provide some markdown configuration
            #
            # @var {[fusionObjectName:string]: {
            #   documentation: string;
            #   snippet: string;
            # }}
            #
            # @example
            fusionObjects:
              'Neos.Fusion:Loop':
                documentation: |
                  **Loop over the items**
                  paramer: __items__ an array

                  the children will receive the current item as `item` unless specifed differently in itemName

                  [Neos.Fusion:Loop](https://neos.readthedocs.io/en/stable/References/NeosFusionReference.html#neos-fusion-loop)
                snippet: |
                  <Neos.Fusion:Loop items={${1:items}}>
                    $0
                  </Neos.Fusion:Loop>
